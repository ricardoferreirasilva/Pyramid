class Card

instance variables
		private value: nat;
		private left: [Card];
    private right: [Card];
          
operations
		--Card Constructor ex: create p := new Card(1,nil,nil);
		public Card: int * [Card] * [Card] ==> Card
		Card(v,l,r) == 
		(
			value := v;
			left := l;
			right := r;
			return self
		)
		post value = v and left = l and right = r;
		
		
		--Choose this card, get its value ex: print p.chooseCard()
		public chooseCard: () ==> nat
		chooseCard() ==
		(
			return value;
		);
		-- Set a left child card
		public setLeft: Card ==> ()
		setLeft(l) ==
		(
			left := l;
			return;
		);
		-- Set a right child card
		public setRight: Card ==> ()
		setRight(r) ==
		(
			right := r;
			return;
		);
		
		
		
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Card