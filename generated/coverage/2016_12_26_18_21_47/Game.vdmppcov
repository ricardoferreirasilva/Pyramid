class Game

instance variables
		private deck: seq of nat;
		inv len deck = 52;
operations
    -- create g := new Game();
		public Game: () ==> Game
		Game() == 
		(
			deck := [1,2,3,4,5,6,7,8,9,10,
			11,12,13,14,15,16,17,18,19,20,
			21,22,23,24,25,26,27,28,29,30,
			31,32,33,34,35,36,37,38,39,40,
			41,42,43,44,45,46,47,48,49,50,
			51,52];
			
			return self
		);
		
		public pop: () ==> nat
    pop() == return 2;
    
    -- print g.shuffle();
    public shuffle: () ==> ()
    shuffle() == (
    	dcl index  : nat;
    	dcl x : nat;
    	for counter = 1 to len deck do
    	(
    			index  := MATH`rand(52);
    			x := deck (counter);
    			deck (counter) := deck (index);
    			deck (index) := x;
 					
			)
    )
    post forall d in seq deck &
 		len [elems deck union {d}] = 2;
    


functions

traces
-- TODO Define Combinatorial Test Traces here
end Game